<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jk.minimalism.dao.UserMapper">
    <resultMap id="BaseResultMap" type="com.jk.minimalism.bean.entity.User">
        <!--
          WARNING - @mbg.generated
        -->
        <id column="ID" jdbcType="BIGINT" property="id"/>
        <result column="USERNAME" jdbcType="VARCHAR" property="username"/>
        <result column="PASSWORD" jdbcType="VARCHAR" property="password"/>
        <result column="NICKNAME" jdbcType="VARCHAR" property="nickname"/>
        <result column="PHONE" jdbcType="VARCHAR" property="phone"/>
        <result column="CURRENT_LOGIN_TIME" jdbcType="TIMESTAMP" property="currentLoginTime"/>
        <result column="LAST_LOGIN_TIME" jdbcType="TIMESTAMP" property="lastLoginTime"/>
        <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="UPDATE_BY" jdbcType="BIGINT" property="updateBy"/>
        <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="CREATE_BY" jdbcType="BIGINT" property="createBy"/>
        <result column="STATE" jdbcType="INTEGER" property="state"/>
    </resultMap>

    <resultMap id="UserListResponseMap" type="com.jk.minimalism.bean.dto.UserListResponseDTO">
        <!--
          WARNING - @mbg.generated
        -->
        <id column="ID" jdbcType="BIGINT" property="id"/>
        <result column="USERNAME" jdbcType="VARCHAR" property="username"/>
        <result column="NICKNAME" jdbcType="VARCHAR" property="nickname"/>
        <result column="PHONE" jdbcType="VARCHAR" property="phone"/>
        <result column="CURRENT_LOGIN_TIME" jdbcType="TIMESTAMP" property="currentLoginTime"/>
        <result column="LAST_LOGIN_TIME" jdbcType="TIMESTAMP" property="lastLoginTime"/>
        <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="STATE" jdbcType="INTEGER" property="state"/>
        <result column="ROLE_NAME" jdbcType="VARCHAR" property="roleName"/>
    </resultMap>

    <select id="findByUsername" resultMap="BaseResultMap">
        SELECT * FROM sys_user WHERE BINARY USERNAME = #{username}
    </select>

    <select id="findRoleByUserId" resultType="java.lang.Integer">
        SELECT R.ROLE_ID FROM sys_user U
        INNER JOIN sys_user_role R ON U.ID = R.USER_ID
        WHERE U.ID = #{id} LIMIT 1
    </select>

    <sql id="where">
        <where>
            <if test="params.condition != null and params.condition != ''">
                and (t.username like concat('%', #{params.condition}, '%')
                or t.nickname like concat('%', #{params.condition}, '%')
                or t.phone like concat('%', #{params.condition}, '%'))
            </if>
            <if test="params.roleId != null and params.roleId !=''">
                and sur.ROLE_ID = #{params.roleId}
            </if>
            <if test="params.state != null ">
                and t.state = #{params.state}
            </if>
        </where>
    </sql>

    <select id="list" resultMap="UserListResponseMap">
        SELECT
        t.ID,
        t.USERNAME,
        t.NICKNAME,
        t.PHONE,
        t.CURRENT_LOGIN_TIME,
        t.LAST_LOGIN_TIME,
        t.CREATE_TIME,
        t.STATE,
        sr.NAME ROLE_NAME
        FROM sys_user t
        LEFT JOIN sys_user_role sur ON t.ID = sur.USER_ID
        LEFT JOIN sys_role sr on sur.ROLE_ID = sr.ID
        <include refid="where"/>
        ORDER BY t.CREATE_TIME ASC
    </select>

    <delete id="deleteUser">
        DELETE T1, T2 FROM sys_user T1
        INNER JOIN sys_role_user T2 ON T1.id = T2.userId
        WHERE T1.id = #{userId}
    </delete>

    <update id="updatePassword">
        UPDATE sys_user
        SET PASSWORD = #{newPassword},
        UPDATE_BY = #{updateUserId},
        UPDATE_TIME = NOW()
        WHERE ID IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        AND STATE = 1
    </update>

    <update id="updateStates">
        UPDATE sys_user
        SET STATE = #{state},
        UPDATE_BY = #{updateUserId},
        UPDATE_TIME = NOW()
        WHERE ID IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <select id="existsWithUsername" resultType="java.lang.Boolean">
        SELECT COUNT(*) > 0
        FROM sys_user
        WHERE BINARY USERNAME = #{username}
    </select>

    <select id="existsWithUsernameWithoutId" resultType="java.lang.Boolean">
        SELECT COUNT(*) > 0
        FROM sys_user
        WHERE ID != #{id}
          AND BINARY USERNAME = #{username}
    </select>

    <select id="existsDisabled" resultType="java.lang.Boolean">
        SELECT COUNT(*) > 0 FROM sys_user WHERE ID IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        AND STATE = 0
    </select>

    <select id="selectUserNamesByIds" resultType="java.lang.String">
        SELECT USERNAME FROM sys_user WHERE ID IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        AND STATE = 0
    </select>

    <select id="selectByIds" resultMap="BaseResultMap">
        SELECT * FROM sys_user
        WHERE ID IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <update id="updateLoginTime">
        UPDATE sys_user
        SET LAST_LOGIN_TIME    = CURRENT_LOGIN_TIME,
            CURRENT_LOGIN_TIME = NOW()
        WHERE ID = #{id}
    </update>

</mapper>