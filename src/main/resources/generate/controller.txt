package {controllerPkgName};

import java.util.Map;

import com.yzf.vg.configuration.utils.ColumnProUtil;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.yzf.vg.configuration.page.table.PageTableRequest;
import com.yzf.vg.configuration.page.table.PageTableHandler;
import com.yzf.vg.configuration.page.table.PageTableResponse;
import {servicePackageName}.{serviceName};
import {daoPackageName}.{daoName};
import {beanPackageName}.{beanName};

import io.swagger.annotations.ApiOperation;

/**
 * @author auto-generate
 */
@RestController
@RequestMapping("/{beanParamName}s")
public class {controllerName} {

    @Autowired
    private {serviceName} {serviceParamName};

    @PostMapping
    @ApiOperation(value = "保存")
    public {beanName} save(@RequestBody {beanName} {beanParamName}) {
        {serviceParamName}.save{beanName}({beanParamName});

        return {beanParamName};
    }

    @GetMapping("/{id}")
    @ApiOperation(value = "根据id获取")
    public {beanName} get(@PathVariable Long id) {
        return {serviceParamName}.getById(id);
    }

    @PutMapping
    @ApiOperation(value = "修改")
    public {beanName} update(@RequestBody {beanName} {beanParamName}) {
        {serviceParamName}.update({beanParamName});

        return {beanParamName};
    }

    @GetMapping
    @ApiOperation(value = "列表")
    public PageTableResponse list(PageTableRequest request) {
        return new PageTableHandler(countRequest -> {serviceParamName}.count(countRequest.getParams()),
              listRequest -> {serviceParamName}.list(listRequest.getParams(), listRequest.getOffset(), listRequest.getLimit()),
              orderRequest -> {
                  Map<String,String> map = ColumnProUtil.getColumnPro({daoName}.class, "BaseResultMap");
                  String orderBy = ColumnProUtil.pro2Column(orderRequest, map);
                  orderRequest.getParams().put("orderBy", orderBy);
                  return orderRequest;
              }).handle(request);
    }

    @DeleteMapping("/{id}")
    @ApiOperation(value = "删除")
    public void delete(@PathVariable Long id) {
        {serviceParamName}.delete(id);
    }
}
